#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.14.0                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7297609826975921267) {
   out_7297609826975921267[0] = 0;
   out_7297609826975921267[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7297609826975921267[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7297609826975921267[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7297609826975921267[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7297609826975921267[5] = -sin(in_vec[1]);
   out_7297609826975921267[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7297609826975921267[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7297609826975921267[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7297609826975921267[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7297609826975921267[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7297609826975921267[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7297609826975921267[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7297609826975921267[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7297609826975921267[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7297609826975921267[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7297609826975921267[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7297609826975921267[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4679498904975908567) {
   out_4679498904975908567[0] = delta_x[0] + nom_x[0];
   out_4679498904975908567[1] = delta_x[1] + nom_x[1];
   out_4679498904975908567[2] = delta_x[2] + nom_x[2];
   out_4679498904975908567[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4679498904975908567[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4679498904975908567[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4679498904975908567[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4679498904975908567[7] = delta_x[6] + nom_x[7];
   out_4679498904975908567[8] = delta_x[7] + nom_x[8];
   out_4679498904975908567[9] = delta_x[8] + nom_x[9];
   out_4679498904975908567[10] = delta_x[9] + nom_x[10];
   out_4679498904975908567[11] = delta_x[10] + nom_x[11];
   out_4679498904975908567[12] = delta_x[11] + nom_x[12];
   out_4679498904975908567[13] = delta_x[12] + nom_x[13];
   out_4679498904975908567[14] = delta_x[13] + nom_x[14];
   out_4679498904975908567[15] = delta_x[14] + nom_x[15];
   out_4679498904975908567[16] = delta_x[15] + nom_x[16];
   out_4679498904975908567[17] = delta_x[16] + nom_x[17];
   out_4679498904975908567[18] = delta_x[17] + nom_x[18];
   out_4679498904975908567[19] = delta_x[18] + nom_x[19];
   out_4679498904975908567[20] = delta_x[19] + nom_x[20];
   out_4679498904975908567[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1441875649138372155) {
   out_1441875649138372155[0] = -nom_x[0] + true_x[0];
   out_1441875649138372155[1] = -nom_x[1] + true_x[1];
   out_1441875649138372155[2] = -nom_x[2] + true_x[2];
   out_1441875649138372155[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1441875649138372155[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1441875649138372155[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1441875649138372155[6] = -nom_x[7] + true_x[7];
   out_1441875649138372155[7] = -nom_x[8] + true_x[8];
   out_1441875649138372155[8] = -nom_x[9] + true_x[9];
   out_1441875649138372155[9] = -nom_x[10] + true_x[10];
   out_1441875649138372155[10] = -nom_x[11] + true_x[11];
   out_1441875649138372155[11] = -nom_x[12] + true_x[12];
   out_1441875649138372155[12] = -nom_x[13] + true_x[13];
   out_1441875649138372155[13] = -nom_x[14] + true_x[14];
   out_1441875649138372155[14] = -nom_x[15] + true_x[15];
   out_1441875649138372155[15] = -nom_x[16] + true_x[16];
   out_1441875649138372155[16] = -nom_x[17] + true_x[17];
   out_1441875649138372155[17] = -nom_x[18] + true_x[18];
   out_1441875649138372155[18] = -nom_x[19] + true_x[19];
   out_1441875649138372155[19] = -nom_x[20] + true_x[20];
   out_1441875649138372155[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2920781560814231797) {
   out_2920781560814231797[0] = 1.0;
   out_2920781560814231797[1] = 0;
   out_2920781560814231797[2] = 0;
   out_2920781560814231797[3] = 0.0;
   out_2920781560814231797[4] = 0.0;
   out_2920781560814231797[5] = 0.0;
   out_2920781560814231797[6] = 0.0;
   out_2920781560814231797[7] = 0.0;
   out_2920781560814231797[8] = 0.0;
   out_2920781560814231797[9] = 0.0;
   out_2920781560814231797[10] = 0.0;
   out_2920781560814231797[11] = 0.0;
   out_2920781560814231797[12] = 0.0;
   out_2920781560814231797[13] = 0.0;
   out_2920781560814231797[14] = 0.0;
   out_2920781560814231797[15] = 0.0;
   out_2920781560814231797[16] = 0.0;
   out_2920781560814231797[17] = 0.0;
   out_2920781560814231797[18] = 0.0;
   out_2920781560814231797[19] = 0.0;
   out_2920781560814231797[20] = 0.0;
   out_2920781560814231797[21] = 0;
   out_2920781560814231797[22] = 1.0;
   out_2920781560814231797[23] = 0;
   out_2920781560814231797[24] = 0.0;
   out_2920781560814231797[25] = 0.0;
   out_2920781560814231797[26] = 0.0;
   out_2920781560814231797[27] = 0.0;
   out_2920781560814231797[28] = 0.0;
   out_2920781560814231797[29] = 0.0;
   out_2920781560814231797[30] = 0.0;
   out_2920781560814231797[31] = 0.0;
   out_2920781560814231797[32] = 0.0;
   out_2920781560814231797[33] = 0.0;
   out_2920781560814231797[34] = 0.0;
   out_2920781560814231797[35] = 0.0;
   out_2920781560814231797[36] = 0.0;
   out_2920781560814231797[37] = 0.0;
   out_2920781560814231797[38] = 0.0;
   out_2920781560814231797[39] = 0.0;
   out_2920781560814231797[40] = 0.0;
   out_2920781560814231797[41] = 0.0;
   out_2920781560814231797[42] = 0;
   out_2920781560814231797[43] = 0;
   out_2920781560814231797[44] = 1.0;
   out_2920781560814231797[45] = 0.0;
   out_2920781560814231797[46] = 0.0;
   out_2920781560814231797[47] = 0.0;
   out_2920781560814231797[48] = 0.0;
   out_2920781560814231797[49] = 0.0;
   out_2920781560814231797[50] = 0.0;
   out_2920781560814231797[51] = 0.0;
   out_2920781560814231797[52] = 0.0;
   out_2920781560814231797[53] = 0.0;
   out_2920781560814231797[54] = 0.0;
   out_2920781560814231797[55] = 0.0;
   out_2920781560814231797[56] = 0.0;
   out_2920781560814231797[57] = 0.0;
   out_2920781560814231797[58] = 0.0;
   out_2920781560814231797[59] = 0.0;
   out_2920781560814231797[60] = 0.0;
   out_2920781560814231797[61] = 0.0;
   out_2920781560814231797[62] = 0.0;
   out_2920781560814231797[63] = 0.0;
   out_2920781560814231797[64] = 0.0;
   out_2920781560814231797[65] = 0.0;
   out_2920781560814231797[66] = -0.5*state[4];
   out_2920781560814231797[67] = -0.5*state[5];
   out_2920781560814231797[68] = -0.5*state[6];
   out_2920781560814231797[69] = 0.0;
   out_2920781560814231797[70] = 0.0;
   out_2920781560814231797[71] = 0.0;
   out_2920781560814231797[72] = 0.0;
   out_2920781560814231797[73] = 0.0;
   out_2920781560814231797[74] = 0.0;
   out_2920781560814231797[75] = 0.0;
   out_2920781560814231797[76] = 0.0;
   out_2920781560814231797[77] = 0.0;
   out_2920781560814231797[78] = 0.0;
   out_2920781560814231797[79] = 0.0;
   out_2920781560814231797[80] = 0.0;
   out_2920781560814231797[81] = 0.0;
   out_2920781560814231797[82] = 0.0;
   out_2920781560814231797[83] = 0.0;
   out_2920781560814231797[84] = 0.0;
   out_2920781560814231797[85] = 0.0;
   out_2920781560814231797[86] = 0.0;
   out_2920781560814231797[87] = 0.5*state[3];
   out_2920781560814231797[88] = 0.5*state[6];
   out_2920781560814231797[89] = -0.5*state[5];
   out_2920781560814231797[90] = 0.0;
   out_2920781560814231797[91] = 0.0;
   out_2920781560814231797[92] = 0.0;
   out_2920781560814231797[93] = 0.0;
   out_2920781560814231797[94] = 0.0;
   out_2920781560814231797[95] = 0.0;
   out_2920781560814231797[96] = 0.0;
   out_2920781560814231797[97] = 0.0;
   out_2920781560814231797[98] = 0.0;
   out_2920781560814231797[99] = 0.0;
   out_2920781560814231797[100] = 0.0;
   out_2920781560814231797[101] = 0.0;
   out_2920781560814231797[102] = 0.0;
   out_2920781560814231797[103] = 0.0;
   out_2920781560814231797[104] = 0.0;
   out_2920781560814231797[105] = 0.0;
   out_2920781560814231797[106] = 0.0;
   out_2920781560814231797[107] = 0.0;
   out_2920781560814231797[108] = -0.5*state[6];
   out_2920781560814231797[109] = 0.5*state[3];
   out_2920781560814231797[110] = 0.5*state[4];
   out_2920781560814231797[111] = 0.0;
   out_2920781560814231797[112] = 0.0;
   out_2920781560814231797[113] = 0.0;
   out_2920781560814231797[114] = 0.0;
   out_2920781560814231797[115] = 0.0;
   out_2920781560814231797[116] = 0.0;
   out_2920781560814231797[117] = 0.0;
   out_2920781560814231797[118] = 0.0;
   out_2920781560814231797[119] = 0.0;
   out_2920781560814231797[120] = 0.0;
   out_2920781560814231797[121] = 0.0;
   out_2920781560814231797[122] = 0.0;
   out_2920781560814231797[123] = 0.0;
   out_2920781560814231797[124] = 0.0;
   out_2920781560814231797[125] = 0.0;
   out_2920781560814231797[126] = 0.0;
   out_2920781560814231797[127] = 0.0;
   out_2920781560814231797[128] = 0.0;
   out_2920781560814231797[129] = 0.5*state[5];
   out_2920781560814231797[130] = -0.5*state[4];
   out_2920781560814231797[131] = 0.5*state[3];
   out_2920781560814231797[132] = 0.0;
   out_2920781560814231797[133] = 0.0;
   out_2920781560814231797[134] = 0.0;
   out_2920781560814231797[135] = 0.0;
   out_2920781560814231797[136] = 0.0;
   out_2920781560814231797[137] = 0.0;
   out_2920781560814231797[138] = 0.0;
   out_2920781560814231797[139] = 0.0;
   out_2920781560814231797[140] = 0.0;
   out_2920781560814231797[141] = 0.0;
   out_2920781560814231797[142] = 0.0;
   out_2920781560814231797[143] = 0.0;
   out_2920781560814231797[144] = 0.0;
   out_2920781560814231797[145] = 0.0;
   out_2920781560814231797[146] = 0.0;
   out_2920781560814231797[147] = 0.0;
   out_2920781560814231797[148] = 0.0;
   out_2920781560814231797[149] = 0.0;
   out_2920781560814231797[150] = 0.0;
   out_2920781560814231797[151] = 0.0;
   out_2920781560814231797[152] = 0.0;
   out_2920781560814231797[153] = 1.0;
   out_2920781560814231797[154] = 0;
   out_2920781560814231797[155] = 0;
   out_2920781560814231797[156] = 0;
   out_2920781560814231797[157] = 0;
   out_2920781560814231797[158] = 0;
   out_2920781560814231797[159] = 0;
   out_2920781560814231797[160] = 0;
   out_2920781560814231797[161] = 0;
   out_2920781560814231797[162] = 0;
   out_2920781560814231797[163] = 0;
   out_2920781560814231797[164] = 0;
   out_2920781560814231797[165] = 0;
   out_2920781560814231797[166] = 0;
   out_2920781560814231797[167] = 0;
   out_2920781560814231797[168] = 0.0;
   out_2920781560814231797[169] = 0.0;
   out_2920781560814231797[170] = 0.0;
   out_2920781560814231797[171] = 0.0;
   out_2920781560814231797[172] = 0.0;
   out_2920781560814231797[173] = 0.0;
   out_2920781560814231797[174] = 0;
   out_2920781560814231797[175] = 1.0;
   out_2920781560814231797[176] = 0;
   out_2920781560814231797[177] = 0;
   out_2920781560814231797[178] = 0;
   out_2920781560814231797[179] = 0;
   out_2920781560814231797[180] = 0;
   out_2920781560814231797[181] = 0;
   out_2920781560814231797[182] = 0;
   out_2920781560814231797[183] = 0;
   out_2920781560814231797[184] = 0;
   out_2920781560814231797[185] = 0;
   out_2920781560814231797[186] = 0;
   out_2920781560814231797[187] = 0;
   out_2920781560814231797[188] = 0;
   out_2920781560814231797[189] = 0.0;
   out_2920781560814231797[190] = 0.0;
   out_2920781560814231797[191] = 0.0;
   out_2920781560814231797[192] = 0.0;
   out_2920781560814231797[193] = 0.0;
   out_2920781560814231797[194] = 0.0;
   out_2920781560814231797[195] = 0;
   out_2920781560814231797[196] = 0;
   out_2920781560814231797[197] = 1.0;
   out_2920781560814231797[198] = 0;
   out_2920781560814231797[199] = 0;
   out_2920781560814231797[200] = 0;
   out_2920781560814231797[201] = 0;
   out_2920781560814231797[202] = 0;
   out_2920781560814231797[203] = 0;
   out_2920781560814231797[204] = 0;
   out_2920781560814231797[205] = 0;
   out_2920781560814231797[206] = 0;
   out_2920781560814231797[207] = 0;
   out_2920781560814231797[208] = 0;
   out_2920781560814231797[209] = 0;
   out_2920781560814231797[210] = 0.0;
   out_2920781560814231797[211] = 0.0;
   out_2920781560814231797[212] = 0.0;
   out_2920781560814231797[213] = 0.0;
   out_2920781560814231797[214] = 0.0;
   out_2920781560814231797[215] = 0.0;
   out_2920781560814231797[216] = 0;
   out_2920781560814231797[217] = 0;
   out_2920781560814231797[218] = 0;
   out_2920781560814231797[219] = 1.0;
   out_2920781560814231797[220] = 0;
   out_2920781560814231797[221] = 0;
   out_2920781560814231797[222] = 0;
   out_2920781560814231797[223] = 0;
   out_2920781560814231797[224] = 0;
   out_2920781560814231797[225] = 0;
   out_2920781560814231797[226] = 0;
   out_2920781560814231797[227] = 0;
   out_2920781560814231797[228] = 0;
   out_2920781560814231797[229] = 0;
   out_2920781560814231797[230] = 0;
   out_2920781560814231797[231] = 0.0;
   out_2920781560814231797[232] = 0.0;
   out_2920781560814231797[233] = 0.0;
   out_2920781560814231797[234] = 0.0;
   out_2920781560814231797[235] = 0.0;
   out_2920781560814231797[236] = 0.0;
   out_2920781560814231797[237] = 0;
   out_2920781560814231797[238] = 0;
   out_2920781560814231797[239] = 0;
   out_2920781560814231797[240] = 0;
   out_2920781560814231797[241] = 1.0;
   out_2920781560814231797[242] = 0;
   out_2920781560814231797[243] = 0;
   out_2920781560814231797[244] = 0;
   out_2920781560814231797[245] = 0;
   out_2920781560814231797[246] = 0;
   out_2920781560814231797[247] = 0;
   out_2920781560814231797[248] = 0;
   out_2920781560814231797[249] = 0;
   out_2920781560814231797[250] = 0;
   out_2920781560814231797[251] = 0;
   out_2920781560814231797[252] = 0.0;
   out_2920781560814231797[253] = 0.0;
   out_2920781560814231797[254] = 0.0;
   out_2920781560814231797[255] = 0.0;
   out_2920781560814231797[256] = 0.0;
   out_2920781560814231797[257] = 0.0;
   out_2920781560814231797[258] = 0;
   out_2920781560814231797[259] = 0;
   out_2920781560814231797[260] = 0;
   out_2920781560814231797[261] = 0;
   out_2920781560814231797[262] = 0;
   out_2920781560814231797[263] = 1.0;
   out_2920781560814231797[264] = 0;
   out_2920781560814231797[265] = 0;
   out_2920781560814231797[266] = 0;
   out_2920781560814231797[267] = 0;
   out_2920781560814231797[268] = 0;
   out_2920781560814231797[269] = 0;
   out_2920781560814231797[270] = 0;
   out_2920781560814231797[271] = 0;
   out_2920781560814231797[272] = 0;
   out_2920781560814231797[273] = 0.0;
   out_2920781560814231797[274] = 0.0;
   out_2920781560814231797[275] = 0.0;
   out_2920781560814231797[276] = 0.0;
   out_2920781560814231797[277] = 0.0;
   out_2920781560814231797[278] = 0.0;
   out_2920781560814231797[279] = 0;
   out_2920781560814231797[280] = 0;
   out_2920781560814231797[281] = 0;
   out_2920781560814231797[282] = 0;
   out_2920781560814231797[283] = 0;
   out_2920781560814231797[284] = 0;
   out_2920781560814231797[285] = 1.0;
   out_2920781560814231797[286] = 0;
   out_2920781560814231797[287] = 0;
   out_2920781560814231797[288] = 0;
   out_2920781560814231797[289] = 0;
   out_2920781560814231797[290] = 0;
   out_2920781560814231797[291] = 0;
   out_2920781560814231797[292] = 0;
   out_2920781560814231797[293] = 0;
   out_2920781560814231797[294] = 0.0;
   out_2920781560814231797[295] = 0.0;
   out_2920781560814231797[296] = 0.0;
   out_2920781560814231797[297] = 0.0;
   out_2920781560814231797[298] = 0.0;
   out_2920781560814231797[299] = 0.0;
   out_2920781560814231797[300] = 0;
   out_2920781560814231797[301] = 0;
   out_2920781560814231797[302] = 0;
   out_2920781560814231797[303] = 0;
   out_2920781560814231797[304] = 0;
   out_2920781560814231797[305] = 0;
   out_2920781560814231797[306] = 0;
   out_2920781560814231797[307] = 1.0;
   out_2920781560814231797[308] = 0;
   out_2920781560814231797[309] = 0;
   out_2920781560814231797[310] = 0;
   out_2920781560814231797[311] = 0;
   out_2920781560814231797[312] = 0;
   out_2920781560814231797[313] = 0;
   out_2920781560814231797[314] = 0;
   out_2920781560814231797[315] = 0.0;
   out_2920781560814231797[316] = 0.0;
   out_2920781560814231797[317] = 0.0;
   out_2920781560814231797[318] = 0.0;
   out_2920781560814231797[319] = 0.0;
   out_2920781560814231797[320] = 0.0;
   out_2920781560814231797[321] = 0;
   out_2920781560814231797[322] = 0;
   out_2920781560814231797[323] = 0;
   out_2920781560814231797[324] = 0;
   out_2920781560814231797[325] = 0;
   out_2920781560814231797[326] = 0;
   out_2920781560814231797[327] = 0;
   out_2920781560814231797[328] = 0;
   out_2920781560814231797[329] = 1.0;
   out_2920781560814231797[330] = 0;
   out_2920781560814231797[331] = 0;
   out_2920781560814231797[332] = 0;
   out_2920781560814231797[333] = 0;
   out_2920781560814231797[334] = 0;
   out_2920781560814231797[335] = 0;
   out_2920781560814231797[336] = 0.0;
   out_2920781560814231797[337] = 0.0;
   out_2920781560814231797[338] = 0.0;
   out_2920781560814231797[339] = 0.0;
   out_2920781560814231797[340] = 0.0;
   out_2920781560814231797[341] = 0.0;
   out_2920781560814231797[342] = 0;
   out_2920781560814231797[343] = 0;
   out_2920781560814231797[344] = 0;
   out_2920781560814231797[345] = 0;
   out_2920781560814231797[346] = 0;
   out_2920781560814231797[347] = 0;
   out_2920781560814231797[348] = 0;
   out_2920781560814231797[349] = 0;
   out_2920781560814231797[350] = 0;
   out_2920781560814231797[351] = 1.0;
   out_2920781560814231797[352] = 0;
   out_2920781560814231797[353] = 0;
   out_2920781560814231797[354] = 0;
   out_2920781560814231797[355] = 0;
   out_2920781560814231797[356] = 0;
   out_2920781560814231797[357] = 0.0;
   out_2920781560814231797[358] = 0.0;
   out_2920781560814231797[359] = 0.0;
   out_2920781560814231797[360] = 0.0;
   out_2920781560814231797[361] = 0.0;
   out_2920781560814231797[362] = 0.0;
   out_2920781560814231797[363] = 0;
   out_2920781560814231797[364] = 0;
   out_2920781560814231797[365] = 0;
   out_2920781560814231797[366] = 0;
   out_2920781560814231797[367] = 0;
   out_2920781560814231797[368] = 0;
   out_2920781560814231797[369] = 0;
   out_2920781560814231797[370] = 0;
   out_2920781560814231797[371] = 0;
   out_2920781560814231797[372] = 0;
   out_2920781560814231797[373] = 1.0;
   out_2920781560814231797[374] = 0;
   out_2920781560814231797[375] = 0;
   out_2920781560814231797[376] = 0;
   out_2920781560814231797[377] = 0;
   out_2920781560814231797[378] = 0.0;
   out_2920781560814231797[379] = 0.0;
   out_2920781560814231797[380] = 0.0;
   out_2920781560814231797[381] = 0.0;
   out_2920781560814231797[382] = 0.0;
   out_2920781560814231797[383] = 0.0;
   out_2920781560814231797[384] = 0;
   out_2920781560814231797[385] = 0;
   out_2920781560814231797[386] = 0;
   out_2920781560814231797[387] = 0;
   out_2920781560814231797[388] = 0;
   out_2920781560814231797[389] = 0;
   out_2920781560814231797[390] = 0;
   out_2920781560814231797[391] = 0;
   out_2920781560814231797[392] = 0;
   out_2920781560814231797[393] = 0;
   out_2920781560814231797[394] = 0;
   out_2920781560814231797[395] = 1.0;
   out_2920781560814231797[396] = 0;
   out_2920781560814231797[397] = 0;
   out_2920781560814231797[398] = 0;
   out_2920781560814231797[399] = 0.0;
   out_2920781560814231797[400] = 0.0;
   out_2920781560814231797[401] = 0.0;
   out_2920781560814231797[402] = 0.0;
   out_2920781560814231797[403] = 0.0;
   out_2920781560814231797[404] = 0.0;
   out_2920781560814231797[405] = 0;
   out_2920781560814231797[406] = 0;
   out_2920781560814231797[407] = 0;
   out_2920781560814231797[408] = 0;
   out_2920781560814231797[409] = 0;
   out_2920781560814231797[410] = 0;
   out_2920781560814231797[411] = 0;
   out_2920781560814231797[412] = 0;
   out_2920781560814231797[413] = 0;
   out_2920781560814231797[414] = 0;
   out_2920781560814231797[415] = 0;
   out_2920781560814231797[416] = 0;
   out_2920781560814231797[417] = 1.0;
   out_2920781560814231797[418] = 0;
   out_2920781560814231797[419] = 0;
   out_2920781560814231797[420] = 0.0;
   out_2920781560814231797[421] = 0.0;
   out_2920781560814231797[422] = 0.0;
   out_2920781560814231797[423] = 0.0;
   out_2920781560814231797[424] = 0.0;
   out_2920781560814231797[425] = 0.0;
   out_2920781560814231797[426] = 0;
   out_2920781560814231797[427] = 0;
   out_2920781560814231797[428] = 0;
   out_2920781560814231797[429] = 0;
   out_2920781560814231797[430] = 0;
   out_2920781560814231797[431] = 0;
   out_2920781560814231797[432] = 0;
   out_2920781560814231797[433] = 0;
   out_2920781560814231797[434] = 0;
   out_2920781560814231797[435] = 0;
   out_2920781560814231797[436] = 0;
   out_2920781560814231797[437] = 0;
   out_2920781560814231797[438] = 0;
   out_2920781560814231797[439] = 1.0;
   out_2920781560814231797[440] = 0;
   out_2920781560814231797[441] = 0.0;
   out_2920781560814231797[442] = 0.0;
   out_2920781560814231797[443] = 0.0;
   out_2920781560814231797[444] = 0.0;
   out_2920781560814231797[445] = 0.0;
   out_2920781560814231797[446] = 0.0;
   out_2920781560814231797[447] = 0;
   out_2920781560814231797[448] = 0;
   out_2920781560814231797[449] = 0;
   out_2920781560814231797[450] = 0;
   out_2920781560814231797[451] = 0;
   out_2920781560814231797[452] = 0;
   out_2920781560814231797[453] = 0;
   out_2920781560814231797[454] = 0;
   out_2920781560814231797[455] = 0;
   out_2920781560814231797[456] = 0;
   out_2920781560814231797[457] = 0;
   out_2920781560814231797[458] = 0;
   out_2920781560814231797[459] = 0;
   out_2920781560814231797[460] = 0;
   out_2920781560814231797[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6680759157643157991) {
   out_6680759157643157991[0] = dt*state[7] + state[0];
   out_6680759157643157991[1] = dt*state[8] + state[1];
   out_6680759157643157991[2] = dt*state[9] + state[2];
   out_6680759157643157991[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6680759157643157991[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6680759157643157991[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6680759157643157991[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6680759157643157991[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6680759157643157991[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6680759157643157991[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6680759157643157991[10] = state[10];
   out_6680759157643157991[11] = state[11];
   out_6680759157643157991[12] = state[12];
   out_6680759157643157991[13] = state[13];
   out_6680759157643157991[14] = state[14];
   out_6680759157643157991[15] = state[15];
   out_6680759157643157991[16] = state[16];
   out_6680759157643157991[17] = state[17];
   out_6680759157643157991[18] = state[18];
   out_6680759157643157991[19] = state[19];
   out_6680759157643157991[20] = state[20];
   out_6680759157643157991[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1255619877366735487) {
   out_1255619877366735487[0] = 1;
   out_1255619877366735487[1] = 0;
   out_1255619877366735487[2] = 0;
   out_1255619877366735487[3] = 0;
   out_1255619877366735487[4] = 0;
   out_1255619877366735487[5] = 0;
   out_1255619877366735487[6] = dt;
   out_1255619877366735487[7] = 0;
   out_1255619877366735487[8] = 0;
   out_1255619877366735487[9] = 0;
   out_1255619877366735487[10] = 0;
   out_1255619877366735487[11] = 0;
   out_1255619877366735487[12] = 0;
   out_1255619877366735487[13] = 0;
   out_1255619877366735487[14] = 0;
   out_1255619877366735487[15] = 0;
   out_1255619877366735487[16] = 0;
   out_1255619877366735487[17] = 0;
   out_1255619877366735487[18] = 0;
   out_1255619877366735487[19] = 0;
   out_1255619877366735487[20] = 0;
   out_1255619877366735487[21] = 0;
   out_1255619877366735487[22] = 1;
   out_1255619877366735487[23] = 0;
   out_1255619877366735487[24] = 0;
   out_1255619877366735487[25] = 0;
   out_1255619877366735487[26] = 0;
   out_1255619877366735487[27] = 0;
   out_1255619877366735487[28] = dt;
   out_1255619877366735487[29] = 0;
   out_1255619877366735487[30] = 0;
   out_1255619877366735487[31] = 0;
   out_1255619877366735487[32] = 0;
   out_1255619877366735487[33] = 0;
   out_1255619877366735487[34] = 0;
   out_1255619877366735487[35] = 0;
   out_1255619877366735487[36] = 0;
   out_1255619877366735487[37] = 0;
   out_1255619877366735487[38] = 0;
   out_1255619877366735487[39] = 0;
   out_1255619877366735487[40] = 0;
   out_1255619877366735487[41] = 0;
   out_1255619877366735487[42] = 0;
   out_1255619877366735487[43] = 0;
   out_1255619877366735487[44] = 1;
   out_1255619877366735487[45] = 0;
   out_1255619877366735487[46] = 0;
   out_1255619877366735487[47] = 0;
   out_1255619877366735487[48] = 0;
   out_1255619877366735487[49] = 0;
   out_1255619877366735487[50] = dt;
   out_1255619877366735487[51] = 0;
   out_1255619877366735487[52] = 0;
   out_1255619877366735487[53] = 0;
   out_1255619877366735487[54] = 0;
   out_1255619877366735487[55] = 0;
   out_1255619877366735487[56] = 0;
   out_1255619877366735487[57] = 0;
   out_1255619877366735487[58] = 0;
   out_1255619877366735487[59] = 0;
   out_1255619877366735487[60] = 0;
   out_1255619877366735487[61] = 0;
   out_1255619877366735487[62] = 0;
   out_1255619877366735487[63] = 0;
   out_1255619877366735487[64] = 0;
   out_1255619877366735487[65] = 0;
   out_1255619877366735487[66] = 1;
   out_1255619877366735487[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1255619877366735487[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1255619877366735487[69] = 0;
   out_1255619877366735487[70] = 0;
   out_1255619877366735487[71] = 0;
   out_1255619877366735487[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1255619877366735487[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1255619877366735487[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1255619877366735487[75] = 0;
   out_1255619877366735487[76] = 0;
   out_1255619877366735487[77] = 0;
   out_1255619877366735487[78] = 0;
   out_1255619877366735487[79] = 0;
   out_1255619877366735487[80] = 0;
   out_1255619877366735487[81] = 0;
   out_1255619877366735487[82] = 0;
   out_1255619877366735487[83] = 0;
   out_1255619877366735487[84] = 0;
   out_1255619877366735487[85] = 0;
   out_1255619877366735487[86] = 0;
   out_1255619877366735487[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1255619877366735487[88] = 1;
   out_1255619877366735487[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1255619877366735487[90] = 0;
   out_1255619877366735487[91] = 0;
   out_1255619877366735487[92] = 0;
   out_1255619877366735487[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1255619877366735487[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1255619877366735487[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1255619877366735487[96] = 0;
   out_1255619877366735487[97] = 0;
   out_1255619877366735487[98] = 0;
   out_1255619877366735487[99] = 0;
   out_1255619877366735487[100] = 0;
   out_1255619877366735487[101] = 0;
   out_1255619877366735487[102] = 0;
   out_1255619877366735487[103] = 0;
   out_1255619877366735487[104] = 0;
   out_1255619877366735487[105] = 0;
   out_1255619877366735487[106] = 0;
   out_1255619877366735487[107] = 0;
   out_1255619877366735487[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1255619877366735487[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1255619877366735487[110] = 1;
   out_1255619877366735487[111] = 0;
   out_1255619877366735487[112] = 0;
   out_1255619877366735487[113] = 0;
   out_1255619877366735487[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1255619877366735487[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1255619877366735487[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1255619877366735487[117] = 0;
   out_1255619877366735487[118] = 0;
   out_1255619877366735487[119] = 0;
   out_1255619877366735487[120] = 0;
   out_1255619877366735487[121] = 0;
   out_1255619877366735487[122] = 0;
   out_1255619877366735487[123] = 0;
   out_1255619877366735487[124] = 0;
   out_1255619877366735487[125] = 0;
   out_1255619877366735487[126] = 0;
   out_1255619877366735487[127] = 0;
   out_1255619877366735487[128] = 0;
   out_1255619877366735487[129] = 0;
   out_1255619877366735487[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1255619877366735487[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1255619877366735487[132] = 1;
   out_1255619877366735487[133] = 0;
   out_1255619877366735487[134] = 0;
   out_1255619877366735487[135] = 0;
   out_1255619877366735487[136] = 0;
   out_1255619877366735487[137] = 0;
   out_1255619877366735487[138] = 0;
   out_1255619877366735487[139] = 0;
   out_1255619877366735487[140] = 0;
   out_1255619877366735487[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1255619877366735487[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1255619877366735487[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1255619877366735487[144] = 0;
   out_1255619877366735487[145] = 0;
   out_1255619877366735487[146] = 0;
   out_1255619877366735487[147] = 0;
   out_1255619877366735487[148] = 0;
   out_1255619877366735487[149] = 0;
   out_1255619877366735487[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1255619877366735487[151] = 0;
   out_1255619877366735487[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1255619877366735487[153] = 0;
   out_1255619877366735487[154] = 1;
   out_1255619877366735487[155] = 0;
   out_1255619877366735487[156] = 0;
   out_1255619877366735487[157] = 0;
   out_1255619877366735487[158] = 0;
   out_1255619877366735487[159] = 0;
   out_1255619877366735487[160] = 0;
   out_1255619877366735487[161] = 0;
   out_1255619877366735487[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1255619877366735487[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1255619877366735487[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1255619877366735487[165] = 0;
   out_1255619877366735487[166] = 0;
   out_1255619877366735487[167] = 0;
   out_1255619877366735487[168] = 0;
   out_1255619877366735487[169] = 0;
   out_1255619877366735487[170] = 0;
   out_1255619877366735487[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1255619877366735487[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1255619877366735487[173] = 0;
   out_1255619877366735487[174] = 0;
   out_1255619877366735487[175] = 0;
   out_1255619877366735487[176] = 1;
   out_1255619877366735487[177] = 0;
   out_1255619877366735487[178] = 0;
   out_1255619877366735487[179] = 0;
   out_1255619877366735487[180] = 0;
   out_1255619877366735487[181] = 0;
   out_1255619877366735487[182] = 0;
   out_1255619877366735487[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1255619877366735487[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1255619877366735487[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1255619877366735487[186] = 0;
   out_1255619877366735487[187] = 0;
   out_1255619877366735487[188] = 0;
   out_1255619877366735487[189] = 0;
   out_1255619877366735487[190] = 0;
   out_1255619877366735487[191] = 0;
   out_1255619877366735487[192] = 0;
   out_1255619877366735487[193] = 0;
   out_1255619877366735487[194] = 0;
   out_1255619877366735487[195] = 0;
   out_1255619877366735487[196] = 0;
   out_1255619877366735487[197] = 0;
   out_1255619877366735487[198] = 1;
   out_1255619877366735487[199] = 0;
   out_1255619877366735487[200] = 0;
   out_1255619877366735487[201] = 0;
   out_1255619877366735487[202] = 0;
   out_1255619877366735487[203] = 0;
   out_1255619877366735487[204] = 0;
   out_1255619877366735487[205] = 0;
   out_1255619877366735487[206] = 0;
   out_1255619877366735487[207] = 0;
   out_1255619877366735487[208] = 0;
   out_1255619877366735487[209] = 0;
   out_1255619877366735487[210] = 0;
   out_1255619877366735487[211] = 0;
   out_1255619877366735487[212] = 0;
   out_1255619877366735487[213] = 0;
   out_1255619877366735487[214] = 0;
   out_1255619877366735487[215] = 0;
   out_1255619877366735487[216] = 0;
   out_1255619877366735487[217] = 0;
   out_1255619877366735487[218] = 0;
   out_1255619877366735487[219] = 0;
   out_1255619877366735487[220] = 1;
   out_1255619877366735487[221] = 0;
   out_1255619877366735487[222] = 0;
   out_1255619877366735487[223] = 0;
   out_1255619877366735487[224] = 0;
   out_1255619877366735487[225] = 0;
   out_1255619877366735487[226] = 0;
   out_1255619877366735487[227] = 0;
   out_1255619877366735487[228] = 0;
   out_1255619877366735487[229] = 0;
   out_1255619877366735487[230] = 0;
   out_1255619877366735487[231] = 0;
   out_1255619877366735487[232] = 0;
   out_1255619877366735487[233] = 0;
   out_1255619877366735487[234] = 0;
   out_1255619877366735487[235] = 0;
   out_1255619877366735487[236] = 0;
   out_1255619877366735487[237] = 0;
   out_1255619877366735487[238] = 0;
   out_1255619877366735487[239] = 0;
   out_1255619877366735487[240] = 0;
   out_1255619877366735487[241] = 0;
   out_1255619877366735487[242] = 1;
   out_1255619877366735487[243] = 0;
   out_1255619877366735487[244] = 0;
   out_1255619877366735487[245] = 0;
   out_1255619877366735487[246] = 0;
   out_1255619877366735487[247] = 0;
   out_1255619877366735487[248] = 0;
   out_1255619877366735487[249] = 0;
   out_1255619877366735487[250] = 0;
   out_1255619877366735487[251] = 0;
   out_1255619877366735487[252] = 0;
   out_1255619877366735487[253] = 0;
   out_1255619877366735487[254] = 0;
   out_1255619877366735487[255] = 0;
   out_1255619877366735487[256] = 0;
   out_1255619877366735487[257] = 0;
   out_1255619877366735487[258] = 0;
   out_1255619877366735487[259] = 0;
   out_1255619877366735487[260] = 0;
   out_1255619877366735487[261] = 0;
   out_1255619877366735487[262] = 0;
   out_1255619877366735487[263] = 0;
   out_1255619877366735487[264] = 1;
   out_1255619877366735487[265] = 0;
   out_1255619877366735487[266] = 0;
   out_1255619877366735487[267] = 0;
   out_1255619877366735487[268] = 0;
   out_1255619877366735487[269] = 0;
   out_1255619877366735487[270] = 0;
   out_1255619877366735487[271] = 0;
   out_1255619877366735487[272] = 0;
   out_1255619877366735487[273] = 0;
   out_1255619877366735487[274] = 0;
   out_1255619877366735487[275] = 0;
   out_1255619877366735487[276] = 0;
   out_1255619877366735487[277] = 0;
   out_1255619877366735487[278] = 0;
   out_1255619877366735487[279] = 0;
   out_1255619877366735487[280] = 0;
   out_1255619877366735487[281] = 0;
   out_1255619877366735487[282] = 0;
   out_1255619877366735487[283] = 0;
   out_1255619877366735487[284] = 0;
   out_1255619877366735487[285] = 0;
   out_1255619877366735487[286] = 1;
   out_1255619877366735487[287] = 0;
   out_1255619877366735487[288] = 0;
   out_1255619877366735487[289] = 0;
   out_1255619877366735487[290] = 0;
   out_1255619877366735487[291] = 0;
   out_1255619877366735487[292] = 0;
   out_1255619877366735487[293] = 0;
   out_1255619877366735487[294] = 0;
   out_1255619877366735487[295] = 0;
   out_1255619877366735487[296] = 0;
   out_1255619877366735487[297] = 0;
   out_1255619877366735487[298] = 0;
   out_1255619877366735487[299] = 0;
   out_1255619877366735487[300] = 0;
   out_1255619877366735487[301] = 0;
   out_1255619877366735487[302] = 0;
   out_1255619877366735487[303] = 0;
   out_1255619877366735487[304] = 0;
   out_1255619877366735487[305] = 0;
   out_1255619877366735487[306] = 0;
   out_1255619877366735487[307] = 0;
   out_1255619877366735487[308] = 1;
   out_1255619877366735487[309] = 0;
   out_1255619877366735487[310] = 0;
   out_1255619877366735487[311] = 0;
   out_1255619877366735487[312] = 0;
   out_1255619877366735487[313] = 0;
   out_1255619877366735487[314] = 0;
   out_1255619877366735487[315] = 0;
   out_1255619877366735487[316] = 0;
   out_1255619877366735487[317] = 0;
   out_1255619877366735487[318] = 0;
   out_1255619877366735487[319] = 0;
   out_1255619877366735487[320] = 0;
   out_1255619877366735487[321] = 0;
   out_1255619877366735487[322] = 0;
   out_1255619877366735487[323] = 0;
   out_1255619877366735487[324] = 0;
   out_1255619877366735487[325] = 0;
   out_1255619877366735487[326] = 0;
   out_1255619877366735487[327] = 0;
   out_1255619877366735487[328] = 0;
   out_1255619877366735487[329] = 0;
   out_1255619877366735487[330] = 1;
   out_1255619877366735487[331] = 0;
   out_1255619877366735487[332] = 0;
   out_1255619877366735487[333] = 0;
   out_1255619877366735487[334] = 0;
   out_1255619877366735487[335] = 0;
   out_1255619877366735487[336] = 0;
   out_1255619877366735487[337] = 0;
   out_1255619877366735487[338] = 0;
   out_1255619877366735487[339] = 0;
   out_1255619877366735487[340] = 0;
   out_1255619877366735487[341] = 0;
   out_1255619877366735487[342] = 0;
   out_1255619877366735487[343] = 0;
   out_1255619877366735487[344] = 0;
   out_1255619877366735487[345] = 0;
   out_1255619877366735487[346] = 0;
   out_1255619877366735487[347] = 0;
   out_1255619877366735487[348] = 0;
   out_1255619877366735487[349] = 0;
   out_1255619877366735487[350] = 0;
   out_1255619877366735487[351] = 0;
   out_1255619877366735487[352] = 1;
   out_1255619877366735487[353] = 0;
   out_1255619877366735487[354] = 0;
   out_1255619877366735487[355] = 0;
   out_1255619877366735487[356] = 0;
   out_1255619877366735487[357] = 0;
   out_1255619877366735487[358] = 0;
   out_1255619877366735487[359] = 0;
   out_1255619877366735487[360] = 0;
   out_1255619877366735487[361] = 0;
   out_1255619877366735487[362] = 0;
   out_1255619877366735487[363] = 0;
   out_1255619877366735487[364] = 0;
   out_1255619877366735487[365] = 0;
   out_1255619877366735487[366] = 0;
   out_1255619877366735487[367] = 0;
   out_1255619877366735487[368] = 0;
   out_1255619877366735487[369] = 0;
   out_1255619877366735487[370] = 0;
   out_1255619877366735487[371] = 0;
   out_1255619877366735487[372] = 0;
   out_1255619877366735487[373] = 0;
   out_1255619877366735487[374] = 1;
   out_1255619877366735487[375] = 0;
   out_1255619877366735487[376] = 0;
   out_1255619877366735487[377] = 0;
   out_1255619877366735487[378] = 0;
   out_1255619877366735487[379] = 0;
   out_1255619877366735487[380] = 0;
   out_1255619877366735487[381] = 0;
   out_1255619877366735487[382] = 0;
   out_1255619877366735487[383] = 0;
   out_1255619877366735487[384] = 0;
   out_1255619877366735487[385] = 0;
   out_1255619877366735487[386] = 0;
   out_1255619877366735487[387] = 0;
   out_1255619877366735487[388] = 0;
   out_1255619877366735487[389] = 0;
   out_1255619877366735487[390] = 0;
   out_1255619877366735487[391] = 0;
   out_1255619877366735487[392] = 0;
   out_1255619877366735487[393] = 0;
   out_1255619877366735487[394] = 0;
   out_1255619877366735487[395] = 0;
   out_1255619877366735487[396] = 1;
   out_1255619877366735487[397] = 0;
   out_1255619877366735487[398] = 0;
   out_1255619877366735487[399] = 0;
   out_1255619877366735487[400] = 0;
   out_1255619877366735487[401] = 0;
   out_1255619877366735487[402] = 0;
   out_1255619877366735487[403] = 0;
   out_1255619877366735487[404] = 0;
   out_1255619877366735487[405] = 0;
   out_1255619877366735487[406] = 0;
   out_1255619877366735487[407] = 0;
   out_1255619877366735487[408] = 0;
   out_1255619877366735487[409] = 0;
   out_1255619877366735487[410] = 0;
   out_1255619877366735487[411] = 0;
   out_1255619877366735487[412] = 0;
   out_1255619877366735487[413] = 0;
   out_1255619877366735487[414] = 0;
   out_1255619877366735487[415] = 0;
   out_1255619877366735487[416] = 0;
   out_1255619877366735487[417] = 0;
   out_1255619877366735487[418] = 1;
   out_1255619877366735487[419] = 0;
   out_1255619877366735487[420] = 0;
   out_1255619877366735487[421] = 0;
   out_1255619877366735487[422] = 0;
   out_1255619877366735487[423] = 0;
   out_1255619877366735487[424] = 0;
   out_1255619877366735487[425] = 0;
   out_1255619877366735487[426] = 0;
   out_1255619877366735487[427] = 0;
   out_1255619877366735487[428] = 0;
   out_1255619877366735487[429] = 0;
   out_1255619877366735487[430] = 0;
   out_1255619877366735487[431] = 0;
   out_1255619877366735487[432] = 0;
   out_1255619877366735487[433] = 0;
   out_1255619877366735487[434] = 0;
   out_1255619877366735487[435] = 0;
   out_1255619877366735487[436] = 0;
   out_1255619877366735487[437] = 0;
   out_1255619877366735487[438] = 0;
   out_1255619877366735487[439] = 0;
   out_1255619877366735487[440] = 1;
}
void h_4(double *state, double *unused, double *out_563215449651170196) {
   out_563215449651170196[0] = state[10] + state[13];
   out_563215449651170196[1] = state[11] + state[14];
   out_563215449651170196[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1716825727293035721) {
   out_1716825727293035721[0] = 0;
   out_1716825727293035721[1] = 0;
   out_1716825727293035721[2] = 0;
   out_1716825727293035721[3] = 0;
   out_1716825727293035721[4] = 0;
   out_1716825727293035721[5] = 0;
   out_1716825727293035721[6] = 0;
   out_1716825727293035721[7] = 0;
   out_1716825727293035721[8] = 0;
   out_1716825727293035721[9] = 0;
   out_1716825727293035721[10] = 1;
   out_1716825727293035721[11] = 0;
   out_1716825727293035721[12] = 0;
   out_1716825727293035721[13] = 1;
   out_1716825727293035721[14] = 0;
   out_1716825727293035721[15] = 0;
   out_1716825727293035721[16] = 0;
   out_1716825727293035721[17] = 0;
   out_1716825727293035721[18] = 0;
   out_1716825727293035721[19] = 0;
   out_1716825727293035721[20] = 0;
   out_1716825727293035721[21] = 0;
   out_1716825727293035721[22] = 0;
   out_1716825727293035721[23] = 0;
   out_1716825727293035721[24] = 0;
   out_1716825727293035721[25] = 0;
   out_1716825727293035721[26] = 0;
   out_1716825727293035721[27] = 0;
   out_1716825727293035721[28] = 0;
   out_1716825727293035721[29] = 0;
   out_1716825727293035721[30] = 0;
   out_1716825727293035721[31] = 0;
   out_1716825727293035721[32] = 0;
   out_1716825727293035721[33] = 1;
   out_1716825727293035721[34] = 0;
   out_1716825727293035721[35] = 0;
   out_1716825727293035721[36] = 1;
   out_1716825727293035721[37] = 0;
   out_1716825727293035721[38] = 0;
   out_1716825727293035721[39] = 0;
   out_1716825727293035721[40] = 0;
   out_1716825727293035721[41] = 0;
   out_1716825727293035721[42] = 0;
   out_1716825727293035721[43] = 0;
   out_1716825727293035721[44] = 0;
   out_1716825727293035721[45] = 0;
   out_1716825727293035721[46] = 0;
   out_1716825727293035721[47] = 0;
   out_1716825727293035721[48] = 0;
   out_1716825727293035721[49] = 0;
   out_1716825727293035721[50] = 0;
   out_1716825727293035721[51] = 0;
   out_1716825727293035721[52] = 0;
   out_1716825727293035721[53] = 0;
   out_1716825727293035721[54] = 0;
   out_1716825727293035721[55] = 0;
   out_1716825727293035721[56] = 1;
   out_1716825727293035721[57] = 0;
   out_1716825727293035721[58] = 0;
   out_1716825727293035721[59] = 1;
   out_1716825727293035721[60] = 0;
   out_1716825727293035721[61] = 0;
   out_1716825727293035721[62] = 0;
   out_1716825727293035721[63] = 0;
   out_1716825727293035721[64] = 0;
   out_1716825727293035721[65] = 0;
}
void h_9(double *state, double *unused, double *out_3183219826328242102) {
   out_3183219826328242102[0] = state[10];
   out_3183219826328242102[1] = state[11];
   out_3183219826328242102[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1475636080663445076) {
   out_1475636080663445076[0] = 0;
   out_1475636080663445076[1] = 0;
   out_1475636080663445076[2] = 0;
   out_1475636080663445076[3] = 0;
   out_1475636080663445076[4] = 0;
   out_1475636080663445076[5] = 0;
   out_1475636080663445076[6] = 0;
   out_1475636080663445076[7] = 0;
   out_1475636080663445076[8] = 0;
   out_1475636080663445076[9] = 0;
   out_1475636080663445076[10] = 1;
   out_1475636080663445076[11] = 0;
   out_1475636080663445076[12] = 0;
   out_1475636080663445076[13] = 0;
   out_1475636080663445076[14] = 0;
   out_1475636080663445076[15] = 0;
   out_1475636080663445076[16] = 0;
   out_1475636080663445076[17] = 0;
   out_1475636080663445076[18] = 0;
   out_1475636080663445076[19] = 0;
   out_1475636080663445076[20] = 0;
   out_1475636080663445076[21] = 0;
   out_1475636080663445076[22] = 0;
   out_1475636080663445076[23] = 0;
   out_1475636080663445076[24] = 0;
   out_1475636080663445076[25] = 0;
   out_1475636080663445076[26] = 0;
   out_1475636080663445076[27] = 0;
   out_1475636080663445076[28] = 0;
   out_1475636080663445076[29] = 0;
   out_1475636080663445076[30] = 0;
   out_1475636080663445076[31] = 0;
   out_1475636080663445076[32] = 0;
   out_1475636080663445076[33] = 1;
   out_1475636080663445076[34] = 0;
   out_1475636080663445076[35] = 0;
   out_1475636080663445076[36] = 0;
   out_1475636080663445076[37] = 0;
   out_1475636080663445076[38] = 0;
   out_1475636080663445076[39] = 0;
   out_1475636080663445076[40] = 0;
   out_1475636080663445076[41] = 0;
   out_1475636080663445076[42] = 0;
   out_1475636080663445076[43] = 0;
   out_1475636080663445076[44] = 0;
   out_1475636080663445076[45] = 0;
   out_1475636080663445076[46] = 0;
   out_1475636080663445076[47] = 0;
   out_1475636080663445076[48] = 0;
   out_1475636080663445076[49] = 0;
   out_1475636080663445076[50] = 0;
   out_1475636080663445076[51] = 0;
   out_1475636080663445076[52] = 0;
   out_1475636080663445076[53] = 0;
   out_1475636080663445076[54] = 0;
   out_1475636080663445076[55] = 0;
   out_1475636080663445076[56] = 1;
   out_1475636080663445076[57] = 0;
   out_1475636080663445076[58] = 0;
   out_1475636080663445076[59] = 0;
   out_1475636080663445076[60] = 0;
   out_1475636080663445076[61] = 0;
   out_1475636080663445076[62] = 0;
   out_1475636080663445076[63] = 0;
   out_1475636080663445076[64] = 0;
   out_1475636080663445076[65] = 0;
}
void h_10(double *state, double *unused, double *out_8305063963410880429) {
   out_8305063963410880429[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8305063963410880429[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8305063963410880429[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4444151992447725406) {
   out_4444151992447725406[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4444151992447725406[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4444151992447725406[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4444151992447725406[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4444151992447725406[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4444151992447725406[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4444151992447725406[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4444151992447725406[7] = 0;
   out_4444151992447725406[8] = 0;
   out_4444151992447725406[9] = 0;
   out_4444151992447725406[10] = 0;
   out_4444151992447725406[11] = 0;
   out_4444151992447725406[12] = 0;
   out_4444151992447725406[13] = 0;
   out_4444151992447725406[14] = 0;
   out_4444151992447725406[15] = 0;
   out_4444151992447725406[16] = 1;
   out_4444151992447725406[17] = 0;
   out_4444151992447725406[18] = 0;
   out_4444151992447725406[19] = 1;
   out_4444151992447725406[20] = 0;
   out_4444151992447725406[21] = 0;
   out_4444151992447725406[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4444151992447725406[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4444151992447725406[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4444151992447725406[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4444151992447725406[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4444151992447725406[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4444151992447725406[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4444151992447725406[29] = 0;
   out_4444151992447725406[30] = 0;
   out_4444151992447725406[31] = 0;
   out_4444151992447725406[32] = 0;
   out_4444151992447725406[33] = 0;
   out_4444151992447725406[34] = 0;
   out_4444151992447725406[35] = 0;
   out_4444151992447725406[36] = 0;
   out_4444151992447725406[37] = 0;
   out_4444151992447725406[38] = 0;
   out_4444151992447725406[39] = 1;
   out_4444151992447725406[40] = 0;
   out_4444151992447725406[41] = 0;
   out_4444151992447725406[42] = 1;
   out_4444151992447725406[43] = 0;
   out_4444151992447725406[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4444151992447725406[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4444151992447725406[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4444151992447725406[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4444151992447725406[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4444151992447725406[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4444151992447725406[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4444151992447725406[51] = 0;
   out_4444151992447725406[52] = 0;
   out_4444151992447725406[53] = 0;
   out_4444151992447725406[54] = 0;
   out_4444151992447725406[55] = 0;
   out_4444151992447725406[56] = 0;
   out_4444151992447725406[57] = 0;
   out_4444151992447725406[58] = 0;
   out_4444151992447725406[59] = 0;
   out_4444151992447725406[60] = 0;
   out_4444151992447725406[61] = 0;
   out_4444151992447725406[62] = 1;
   out_4444151992447725406[63] = 0;
   out_4444151992447725406[64] = 0;
   out_4444151992447725406[65] = 1;
}
void h_12(double *state, double *unused, double *out_2313401396637817391) {
   out_2313401396637817391[0] = state[0];
   out_2313401396637817391[1] = state[1];
   out_2313401396637817391[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3302630680738926074) {
   out_3302630680738926074[0] = 1;
   out_3302630680738926074[1] = 0;
   out_3302630680738926074[2] = 0;
   out_3302630680738926074[3] = 0;
   out_3302630680738926074[4] = 0;
   out_3302630680738926074[5] = 0;
   out_3302630680738926074[6] = 0;
   out_3302630680738926074[7] = 0;
   out_3302630680738926074[8] = 0;
   out_3302630680738926074[9] = 0;
   out_3302630680738926074[10] = 0;
   out_3302630680738926074[11] = 0;
   out_3302630680738926074[12] = 0;
   out_3302630680738926074[13] = 0;
   out_3302630680738926074[14] = 0;
   out_3302630680738926074[15] = 0;
   out_3302630680738926074[16] = 0;
   out_3302630680738926074[17] = 0;
   out_3302630680738926074[18] = 0;
   out_3302630680738926074[19] = 0;
   out_3302630680738926074[20] = 0;
   out_3302630680738926074[21] = 0;
   out_3302630680738926074[22] = 0;
   out_3302630680738926074[23] = 1;
   out_3302630680738926074[24] = 0;
   out_3302630680738926074[25] = 0;
   out_3302630680738926074[26] = 0;
   out_3302630680738926074[27] = 0;
   out_3302630680738926074[28] = 0;
   out_3302630680738926074[29] = 0;
   out_3302630680738926074[30] = 0;
   out_3302630680738926074[31] = 0;
   out_3302630680738926074[32] = 0;
   out_3302630680738926074[33] = 0;
   out_3302630680738926074[34] = 0;
   out_3302630680738926074[35] = 0;
   out_3302630680738926074[36] = 0;
   out_3302630680738926074[37] = 0;
   out_3302630680738926074[38] = 0;
   out_3302630680738926074[39] = 0;
   out_3302630680738926074[40] = 0;
   out_3302630680738926074[41] = 0;
   out_3302630680738926074[42] = 0;
   out_3302630680738926074[43] = 0;
   out_3302630680738926074[44] = 0;
   out_3302630680738926074[45] = 0;
   out_3302630680738926074[46] = 1;
   out_3302630680738926074[47] = 0;
   out_3302630680738926074[48] = 0;
   out_3302630680738926074[49] = 0;
   out_3302630680738926074[50] = 0;
   out_3302630680738926074[51] = 0;
   out_3302630680738926074[52] = 0;
   out_3302630680738926074[53] = 0;
   out_3302630680738926074[54] = 0;
   out_3302630680738926074[55] = 0;
   out_3302630680738926074[56] = 0;
   out_3302630680738926074[57] = 0;
   out_3302630680738926074[58] = 0;
   out_3302630680738926074[59] = 0;
   out_3302630680738926074[60] = 0;
   out_3302630680738926074[61] = 0;
   out_3302630680738926074[62] = 0;
   out_3302630680738926074[63] = 0;
   out_3302630680738926074[64] = 0;
   out_3302630680738926074[65] = 0;
}
void h_35(double *state, double *unused, double *out_5753208091518713076) {
   out_5753208091518713076[0] = state[7];
   out_5753208091518713076[1] = state[8];
   out_5753208091518713076[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6048193713063939783) {
   out_6048193713063939783[0] = 0;
   out_6048193713063939783[1] = 0;
   out_6048193713063939783[2] = 0;
   out_6048193713063939783[3] = 0;
   out_6048193713063939783[4] = 0;
   out_6048193713063939783[5] = 0;
   out_6048193713063939783[6] = 0;
   out_6048193713063939783[7] = 1;
   out_6048193713063939783[8] = 0;
   out_6048193713063939783[9] = 0;
   out_6048193713063939783[10] = 0;
   out_6048193713063939783[11] = 0;
   out_6048193713063939783[12] = 0;
   out_6048193713063939783[13] = 0;
   out_6048193713063939783[14] = 0;
   out_6048193713063939783[15] = 0;
   out_6048193713063939783[16] = 0;
   out_6048193713063939783[17] = 0;
   out_6048193713063939783[18] = 0;
   out_6048193713063939783[19] = 0;
   out_6048193713063939783[20] = 0;
   out_6048193713063939783[21] = 0;
   out_6048193713063939783[22] = 0;
   out_6048193713063939783[23] = 0;
   out_6048193713063939783[24] = 0;
   out_6048193713063939783[25] = 0;
   out_6048193713063939783[26] = 0;
   out_6048193713063939783[27] = 0;
   out_6048193713063939783[28] = 0;
   out_6048193713063939783[29] = 0;
   out_6048193713063939783[30] = 1;
   out_6048193713063939783[31] = 0;
   out_6048193713063939783[32] = 0;
   out_6048193713063939783[33] = 0;
   out_6048193713063939783[34] = 0;
   out_6048193713063939783[35] = 0;
   out_6048193713063939783[36] = 0;
   out_6048193713063939783[37] = 0;
   out_6048193713063939783[38] = 0;
   out_6048193713063939783[39] = 0;
   out_6048193713063939783[40] = 0;
   out_6048193713063939783[41] = 0;
   out_6048193713063939783[42] = 0;
   out_6048193713063939783[43] = 0;
   out_6048193713063939783[44] = 0;
   out_6048193713063939783[45] = 0;
   out_6048193713063939783[46] = 0;
   out_6048193713063939783[47] = 0;
   out_6048193713063939783[48] = 0;
   out_6048193713063939783[49] = 0;
   out_6048193713063939783[50] = 0;
   out_6048193713063939783[51] = 0;
   out_6048193713063939783[52] = 0;
   out_6048193713063939783[53] = 1;
   out_6048193713063939783[54] = 0;
   out_6048193713063939783[55] = 0;
   out_6048193713063939783[56] = 0;
   out_6048193713063939783[57] = 0;
   out_6048193713063939783[58] = 0;
   out_6048193713063939783[59] = 0;
   out_6048193713063939783[60] = 0;
   out_6048193713063939783[61] = 0;
   out_6048193713063939783[62] = 0;
   out_6048193713063939783[63] = 0;
   out_6048193713063939783[64] = 0;
   out_6048193713063939783[65] = 0;
}
void h_32(double *state, double *unused, double *out_1909441066441547943) {
   out_1909441066441547943[0] = state[3];
   out_1909441066441547943[1] = state[4];
   out_1909441066441547943[2] = state[5];
   out_1909441066441547943[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7041032468266184772) {
   out_7041032468266184772[0] = 0;
   out_7041032468266184772[1] = 0;
   out_7041032468266184772[2] = 0;
   out_7041032468266184772[3] = 1;
   out_7041032468266184772[4] = 0;
   out_7041032468266184772[5] = 0;
   out_7041032468266184772[6] = 0;
   out_7041032468266184772[7] = 0;
   out_7041032468266184772[8] = 0;
   out_7041032468266184772[9] = 0;
   out_7041032468266184772[10] = 0;
   out_7041032468266184772[11] = 0;
   out_7041032468266184772[12] = 0;
   out_7041032468266184772[13] = 0;
   out_7041032468266184772[14] = 0;
   out_7041032468266184772[15] = 0;
   out_7041032468266184772[16] = 0;
   out_7041032468266184772[17] = 0;
   out_7041032468266184772[18] = 0;
   out_7041032468266184772[19] = 0;
   out_7041032468266184772[20] = 0;
   out_7041032468266184772[21] = 0;
   out_7041032468266184772[22] = 0;
   out_7041032468266184772[23] = 0;
   out_7041032468266184772[24] = 0;
   out_7041032468266184772[25] = 0;
   out_7041032468266184772[26] = 1;
   out_7041032468266184772[27] = 0;
   out_7041032468266184772[28] = 0;
   out_7041032468266184772[29] = 0;
   out_7041032468266184772[30] = 0;
   out_7041032468266184772[31] = 0;
   out_7041032468266184772[32] = 0;
   out_7041032468266184772[33] = 0;
   out_7041032468266184772[34] = 0;
   out_7041032468266184772[35] = 0;
   out_7041032468266184772[36] = 0;
   out_7041032468266184772[37] = 0;
   out_7041032468266184772[38] = 0;
   out_7041032468266184772[39] = 0;
   out_7041032468266184772[40] = 0;
   out_7041032468266184772[41] = 0;
   out_7041032468266184772[42] = 0;
   out_7041032468266184772[43] = 0;
   out_7041032468266184772[44] = 0;
   out_7041032468266184772[45] = 0;
   out_7041032468266184772[46] = 0;
   out_7041032468266184772[47] = 0;
   out_7041032468266184772[48] = 0;
   out_7041032468266184772[49] = 1;
   out_7041032468266184772[50] = 0;
   out_7041032468266184772[51] = 0;
   out_7041032468266184772[52] = 0;
   out_7041032468266184772[53] = 0;
   out_7041032468266184772[54] = 0;
   out_7041032468266184772[55] = 0;
   out_7041032468266184772[56] = 0;
   out_7041032468266184772[57] = 0;
   out_7041032468266184772[58] = 0;
   out_7041032468266184772[59] = 0;
   out_7041032468266184772[60] = 0;
   out_7041032468266184772[61] = 0;
   out_7041032468266184772[62] = 0;
   out_7041032468266184772[63] = 0;
   out_7041032468266184772[64] = 0;
   out_7041032468266184772[65] = 0;
   out_7041032468266184772[66] = 0;
   out_7041032468266184772[67] = 0;
   out_7041032468266184772[68] = 0;
   out_7041032468266184772[69] = 0;
   out_7041032468266184772[70] = 0;
   out_7041032468266184772[71] = 0;
   out_7041032468266184772[72] = 1;
   out_7041032468266184772[73] = 0;
   out_7041032468266184772[74] = 0;
   out_7041032468266184772[75] = 0;
   out_7041032468266184772[76] = 0;
   out_7041032468266184772[77] = 0;
   out_7041032468266184772[78] = 0;
   out_7041032468266184772[79] = 0;
   out_7041032468266184772[80] = 0;
   out_7041032468266184772[81] = 0;
   out_7041032468266184772[82] = 0;
   out_7041032468266184772[83] = 0;
   out_7041032468266184772[84] = 0;
   out_7041032468266184772[85] = 0;
   out_7041032468266184772[86] = 0;
   out_7041032468266184772[87] = 0;
}
void h_13(double *state, double *unused, double *out_721867829862767928) {
   out_721867829862767928[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_721867829862767928[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_721867829862767928[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3642234102767568596) {
   out_3642234102767568596[0] = 0;
   out_3642234102767568596[1] = 0;
   out_3642234102767568596[2] = 0;
   out_3642234102767568596[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3642234102767568596[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3642234102767568596[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3642234102767568596[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3642234102767568596[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3642234102767568596[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3642234102767568596[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3642234102767568596[10] = 0;
   out_3642234102767568596[11] = 0;
   out_3642234102767568596[12] = 0;
   out_3642234102767568596[13] = 0;
   out_3642234102767568596[14] = 0;
   out_3642234102767568596[15] = 0;
   out_3642234102767568596[16] = 0;
   out_3642234102767568596[17] = 0;
   out_3642234102767568596[18] = 0;
   out_3642234102767568596[19] = 0;
   out_3642234102767568596[20] = 0;
   out_3642234102767568596[21] = 0;
   out_3642234102767568596[22] = 0;
   out_3642234102767568596[23] = 0;
   out_3642234102767568596[24] = 0;
   out_3642234102767568596[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3642234102767568596[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3642234102767568596[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3642234102767568596[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3642234102767568596[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3642234102767568596[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3642234102767568596[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3642234102767568596[32] = 0;
   out_3642234102767568596[33] = 0;
   out_3642234102767568596[34] = 0;
   out_3642234102767568596[35] = 0;
   out_3642234102767568596[36] = 0;
   out_3642234102767568596[37] = 0;
   out_3642234102767568596[38] = 0;
   out_3642234102767568596[39] = 0;
   out_3642234102767568596[40] = 0;
   out_3642234102767568596[41] = 0;
   out_3642234102767568596[42] = 0;
   out_3642234102767568596[43] = 0;
   out_3642234102767568596[44] = 0;
   out_3642234102767568596[45] = 0;
   out_3642234102767568596[46] = 0;
   out_3642234102767568596[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3642234102767568596[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3642234102767568596[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3642234102767568596[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3642234102767568596[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3642234102767568596[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3642234102767568596[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3642234102767568596[54] = 0;
   out_3642234102767568596[55] = 0;
   out_3642234102767568596[56] = 0;
   out_3642234102767568596[57] = 0;
   out_3642234102767568596[58] = 0;
   out_3642234102767568596[59] = 0;
   out_3642234102767568596[60] = 0;
   out_3642234102767568596[61] = 0;
   out_3642234102767568596[62] = 0;
   out_3642234102767568596[63] = 0;
   out_3642234102767568596[64] = 0;
   out_3642234102767568596[65] = 0;
}
void h_14(double *state, double *unused, double *out_3183219826328242102) {
   out_3183219826328242102[0] = state[10];
   out_3183219826328242102[1] = state[11];
   out_3183219826328242102[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1475636080663445076) {
   out_1475636080663445076[0] = 0;
   out_1475636080663445076[1] = 0;
   out_1475636080663445076[2] = 0;
   out_1475636080663445076[3] = 0;
   out_1475636080663445076[4] = 0;
   out_1475636080663445076[5] = 0;
   out_1475636080663445076[6] = 0;
   out_1475636080663445076[7] = 0;
   out_1475636080663445076[8] = 0;
   out_1475636080663445076[9] = 0;
   out_1475636080663445076[10] = 1;
   out_1475636080663445076[11] = 0;
   out_1475636080663445076[12] = 0;
   out_1475636080663445076[13] = 0;
   out_1475636080663445076[14] = 0;
   out_1475636080663445076[15] = 0;
   out_1475636080663445076[16] = 0;
   out_1475636080663445076[17] = 0;
   out_1475636080663445076[18] = 0;
   out_1475636080663445076[19] = 0;
   out_1475636080663445076[20] = 0;
   out_1475636080663445076[21] = 0;
   out_1475636080663445076[22] = 0;
   out_1475636080663445076[23] = 0;
   out_1475636080663445076[24] = 0;
   out_1475636080663445076[25] = 0;
   out_1475636080663445076[26] = 0;
   out_1475636080663445076[27] = 0;
   out_1475636080663445076[28] = 0;
   out_1475636080663445076[29] = 0;
   out_1475636080663445076[30] = 0;
   out_1475636080663445076[31] = 0;
   out_1475636080663445076[32] = 0;
   out_1475636080663445076[33] = 1;
   out_1475636080663445076[34] = 0;
   out_1475636080663445076[35] = 0;
   out_1475636080663445076[36] = 0;
   out_1475636080663445076[37] = 0;
   out_1475636080663445076[38] = 0;
   out_1475636080663445076[39] = 0;
   out_1475636080663445076[40] = 0;
   out_1475636080663445076[41] = 0;
   out_1475636080663445076[42] = 0;
   out_1475636080663445076[43] = 0;
   out_1475636080663445076[44] = 0;
   out_1475636080663445076[45] = 0;
   out_1475636080663445076[46] = 0;
   out_1475636080663445076[47] = 0;
   out_1475636080663445076[48] = 0;
   out_1475636080663445076[49] = 0;
   out_1475636080663445076[50] = 0;
   out_1475636080663445076[51] = 0;
   out_1475636080663445076[52] = 0;
   out_1475636080663445076[53] = 0;
   out_1475636080663445076[54] = 0;
   out_1475636080663445076[55] = 0;
   out_1475636080663445076[56] = 1;
   out_1475636080663445076[57] = 0;
   out_1475636080663445076[58] = 0;
   out_1475636080663445076[59] = 0;
   out_1475636080663445076[60] = 0;
   out_1475636080663445076[61] = 0;
   out_1475636080663445076[62] = 0;
   out_1475636080663445076[63] = 0;
   out_1475636080663445076[64] = 0;
   out_1475636080663445076[65] = 0;
}
void h_33(double *state, double *unused, double *out_5764860013277887979) {
   out_5764860013277887979[0] = state[16];
   out_5764860013277887979[1] = state[17];
   out_5764860013277887979[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4800393334718429259) {
   out_4800393334718429259[0] = 0;
   out_4800393334718429259[1] = 0;
   out_4800393334718429259[2] = 0;
   out_4800393334718429259[3] = 0;
   out_4800393334718429259[4] = 0;
   out_4800393334718429259[5] = 0;
   out_4800393334718429259[6] = 0;
   out_4800393334718429259[7] = 0;
   out_4800393334718429259[8] = 0;
   out_4800393334718429259[9] = 0;
   out_4800393334718429259[10] = 0;
   out_4800393334718429259[11] = 0;
   out_4800393334718429259[12] = 0;
   out_4800393334718429259[13] = 0;
   out_4800393334718429259[14] = 0;
   out_4800393334718429259[15] = 0;
   out_4800393334718429259[16] = 1;
   out_4800393334718429259[17] = 0;
   out_4800393334718429259[18] = 0;
   out_4800393334718429259[19] = 0;
   out_4800393334718429259[20] = 0;
   out_4800393334718429259[21] = 0;
   out_4800393334718429259[22] = 0;
   out_4800393334718429259[23] = 0;
   out_4800393334718429259[24] = 0;
   out_4800393334718429259[25] = 0;
   out_4800393334718429259[26] = 0;
   out_4800393334718429259[27] = 0;
   out_4800393334718429259[28] = 0;
   out_4800393334718429259[29] = 0;
   out_4800393334718429259[30] = 0;
   out_4800393334718429259[31] = 0;
   out_4800393334718429259[32] = 0;
   out_4800393334718429259[33] = 0;
   out_4800393334718429259[34] = 0;
   out_4800393334718429259[35] = 0;
   out_4800393334718429259[36] = 0;
   out_4800393334718429259[37] = 0;
   out_4800393334718429259[38] = 0;
   out_4800393334718429259[39] = 1;
   out_4800393334718429259[40] = 0;
   out_4800393334718429259[41] = 0;
   out_4800393334718429259[42] = 0;
   out_4800393334718429259[43] = 0;
   out_4800393334718429259[44] = 0;
   out_4800393334718429259[45] = 0;
   out_4800393334718429259[46] = 0;
   out_4800393334718429259[47] = 0;
   out_4800393334718429259[48] = 0;
   out_4800393334718429259[49] = 0;
   out_4800393334718429259[50] = 0;
   out_4800393334718429259[51] = 0;
   out_4800393334718429259[52] = 0;
   out_4800393334718429259[53] = 0;
   out_4800393334718429259[54] = 0;
   out_4800393334718429259[55] = 0;
   out_4800393334718429259[56] = 0;
   out_4800393334718429259[57] = 0;
   out_4800393334718429259[58] = 0;
   out_4800393334718429259[59] = 0;
   out_4800393334718429259[60] = 0;
   out_4800393334718429259[61] = 0;
   out_4800393334718429259[62] = 1;
   out_4800393334718429259[63] = 0;
   out_4800393334718429259[64] = 0;
   out_4800393334718429259[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7297609826975921267) {
  H(in_vec, out_7297609826975921267);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4679498904975908567) {
  err_fun(nom_x, delta_x, out_4679498904975908567);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1441875649138372155) {
  inv_err_fun(nom_x, true_x, out_1441875649138372155);
}
void live_H_mod_fun(double *state, double *out_2920781560814231797) {
  H_mod_fun(state, out_2920781560814231797);
}
void live_f_fun(double *state, double dt, double *out_6680759157643157991) {
  f_fun(state,  dt, out_6680759157643157991);
}
void live_F_fun(double *state, double dt, double *out_1255619877366735487) {
  F_fun(state,  dt, out_1255619877366735487);
}
void live_h_4(double *state, double *unused, double *out_563215449651170196) {
  h_4(state, unused, out_563215449651170196);
}
void live_H_4(double *state, double *unused, double *out_1716825727293035721) {
  H_4(state, unused, out_1716825727293035721);
}
void live_h_9(double *state, double *unused, double *out_3183219826328242102) {
  h_9(state, unused, out_3183219826328242102);
}
void live_H_9(double *state, double *unused, double *out_1475636080663445076) {
  H_9(state, unused, out_1475636080663445076);
}
void live_h_10(double *state, double *unused, double *out_8305063963410880429) {
  h_10(state, unused, out_8305063963410880429);
}
void live_H_10(double *state, double *unused, double *out_4444151992447725406) {
  H_10(state, unused, out_4444151992447725406);
}
void live_h_12(double *state, double *unused, double *out_2313401396637817391) {
  h_12(state, unused, out_2313401396637817391);
}
void live_H_12(double *state, double *unused, double *out_3302630680738926074) {
  H_12(state, unused, out_3302630680738926074);
}
void live_h_35(double *state, double *unused, double *out_5753208091518713076) {
  h_35(state, unused, out_5753208091518713076);
}
void live_H_35(double *state, double *unused, double *out_6048193713063939783) {
  H_35(state, unused, out_6048193713063939783);
}
void live_h_32(double *state, double *unused, double *out_1909441066441547943) {
  h_32(state, unused, out_1909441066441547943);
}
void live_H_32(double *state, double *unused, double *out_7041032468266184772) {
  H_32(state, unused, out_7041032468266184772);
}
void live_h_13(double *state, double *unused, double *out_721867829862767928) {
  h_13(state, unused, out_721867829862767928);
}
void live_H_13(double *state, double *unused, double *out_3642234102767568596) {
  H_13(state, unused, out_3642234102767568596);
}
void live_h_14(double *state, double *unused, double *out_3183219826328242102) {
  h_14(state, unused, out_3183219826328242102);
}
void live_H_14(double *state, double *unused, double *out_1475636080663445076) {
  H_14(state, unused, out_1475636080663445076);
}
void live_h_33(double *state, double *unused, double *out_5764860013277887979) {
  h_33(state, unused, out_5764860013277887979);
}
void live_H_33(double *state, double *unused, double *out_4800393334718429259) {
  H_33(state, unused, out_4800393334718429259);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
